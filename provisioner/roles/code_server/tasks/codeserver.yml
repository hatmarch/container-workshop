---
- name: dns for coder
  become: false
  route53:
    state: "{{ s3_state }}"
    zone: "{{workshop_dns_zone}}"
    record: "{{username}}-code.{{ec2_name_prefix|lower}}.{{workshop_dns_zone}}"
    type: A
    overwrite: true
    value: "{{ansible_host}}"
  delegate_to: localhost
  register: route53_status

- name: Download code-server 3 rpm
  get_url:
#    url: https://github.com/cdr/code-server/releases/download/v3.4.1/code-server-3.4.1-amd64.rpm
    url: "{{ code_server_rpm_url }}"
    dest: /tmp/code-server.rpm
    mode: '0440'

- name: install code-server 3 rpm from local rpm and certbot
  dnf:
    name:
      - /tmp/code-server.rpm
      - certbot
    state: present
    disable_gpg_check: true

- name: Apply our systemd service file (instead of RPM file)
  template:
    src: code-server.service.j2
    dest: /etc/systemd/system/code-server.service
    owner: "{{username}}"
    group: wheel
    mode: '0744'

    # source: https://vscode.readthedocs.io/en/latest/getstarted/settings/
- name: ensure custom facts directory exists
  file:
    path: "/home/{{username}}/.local/share/code-server/User/"
    recurse: true
    state: directory
    owner: "{{username}}"

- name: apply code server defaults
  template:
    src: settings.json
    dest: "/home/{{username}}/.local/share/code-server/User/settings.json"
    owner: "{{username}}"

# - name: copy extension files to host
#   copy:
#     src: files/{{ item }}
#     dest: /home/{{ username }}/.local/share/code-server/extensions/
#     owner: "{{ username }}"
#     group: "{{ username }}"
#   loop:
#     - bierner.markdown-preview-github-styles-0.1.6.vsix
#     - hnw.vscode-auto-open-markdown-preview-0.0.4.vsix

- name: Set extension destination dir
  set_fact:
    ext_dest_dir: "/home/{{ username }}/.local/share/code-server/extensions"

- name: Create target directory
  file: 
    path: "{{ ext_dest_dir }}"
    state: directory
    recurse: true
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Download extension files to host
  get_url:
    url: "{{ code_extension_src_url }}/{{ item }}"
    dest: "{{ ext_dest_dir }}/{{ item }}"
    owner: "{{ username }}"
    group: "{{ username }}"
  loop: "{{ extensions_to_install }}"

- name: install ansible and markdown extensions
  become_user: "{{ username }}"
  command: "/bin/code-server --install-extension {{ ext_dest_dir }}/{{ item }}"
  loop:  "{{ extensions_to_install }}"
  ignore_errors: true
  register: install_extension
  until: install_extension is not failed
  retries: 5

- name: daemon-reload, enable and start code-server
  systemd:
    name: code-server
    enabled: true
    state: started
    daemon_reload: true

# if we do not have a cert we will try to work anyway
- name: issue cert
  shell: certbot certonly --no-bootstrap --standalone -d {{username}}-code.{{ec2_name_prefix|lower}}.{{workshop_dns_zone}} --email ansible-network@redhat.com --noninteractive --agree-tos
  register: issue_cert
  until: issue_cert is not failed
  retries: 5
  ignore_errors: true

- name: install nginx
  dnf:
    name:
      - nginx
    state: present

- name: set httpd_unified (selinux)
  seboolean:
    name: "{{ item }}"
    state: true
    persistent: true
  when: ansible_selinux.status is defined and ansible_selinux.status == "enabled"
  with_items:
    - httpd_unified
    - httpd_can_network_connect
    - httpd_can_network_relay

- name: enable at startup
  service:
    name: nginx
    state: started
    enabled: true
    
- name: modify nginx to support code-server
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: 0644
  notify: restart nginx
